{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\NLW4\\\\moveit-next\\\\src\\\\contexts\\\\ChallengeContexts.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react';\nexport var ChallengesContext = /*#__PURE__*/createContext({});\nexport function ChallengeProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(1),\n      level = _useState[0],\n      setLevel = _useState[1];\n\n  var _useState2 = useState(0),\n      currentExperience = _useState2[0],\n      setCurrentExperience = _useState2[1];\n\n  var _useState3 = useState(0),\n      challengesCompleted = _useState3[0],\n      setChallengesCompleted = _useState3[1];\n\n  function levelUp() {\n    setLevel(level + 1);\n  }\n\n  function startNewChallenge() {}\n\n  return /*#__PURE__*/_jsxDEV(ChallengesContext.Provider, {\n    value: {\n      level: level,\n      currentExperience: currentExperience,\n      challengesCompleted: challengesCompleted,\n      levelUp: levelUp,\n      startNewChallenge: startNewChallenge\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChallengeProvider, \"lIgE7IFKF0067ZYEERnSVPjxmqw=\");\n\n_c = ChallengeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChallengeProvider\");","map":{"version":3,"sources":["C:/NLW4/moveit-next/src/contexts/ChallengeContexts.tsx"],"names":["createContext","useState","ChallengesContext","ChallengeProvider","children","level","setLevel","currentExperience","setCurrentExperience","challengesCompleted","setChallengesCompleted","levelUp","startNewChallenge"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,QAAmD,OAAnD;AAgBA,OAAO,IAAMC,iBAAiB,gBAAGF,aAAa,CAAC,EAAD,CAAvC;AAEP,OAAO,SAASG,iBAAT,OAAiE;AAAA;;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;;AAAA,kBAC1CH,QAAQ,CAAC,CAAD,CADkC;AAAA,MAC7DI,KAD6D;AAAA,MACtDC,QADsD;;AAAA,mBAElBL,QAAQ,CAAC,CAAD,CAFU;AAAA,MAE7DM,iBAF6D;AAAA,MAE1CC,oBAF0C;;AAAA,mBAGdP,QAAQ,CAAC,CAAD,CAHM;AAAA,MAG7DQ,mBAH6D;AAAA,MAGxCC,sBAHwC;;AAKpE,WAASC,OAAT,GAAmB;AACfL,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACH;;AAED,WAASO,iBAAT,GAA6B,CAE5B;;AAED,sBACI,QAAC,iBAAD,CAAmB,QAAnB;AACI,IAAA,KAAK,EAAE;AACHP,MAAAA,KAAK,EAALA,KADG;AAEHE,MAAAA,iBAAiB,EAAjBA,iBAFG;AAGHE,MAAAA,mBAAmB,EAAnBA,mBAHG;AAIHE,MAAAA,OAAO,EAAPA,OAJG;AAKHC,MAAAA,iBAAiB,EAAjBA;AALG,KADX;AAAA,cASKR;AATL;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GA1BeD,iB;;KAAAA,iB","sourcesContent":["import { createContext, useState, ReactNode } from 'react';\r\nimport challenges from '../../challenges.json'\r\n\r\n\r\ninterface ChallengesContextData {\r\n    level: number;\r\n    currentExperience: number;\r\n    challengesCompleted: number;\r\n    levelUp: () => void;\r\n    startNewChallenge: () => void;\r\n}\r\n\r\ninterface ChallengeProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const ChallengesContext = createContext({} as ChallengesContextData);\r\n\r\nexport function ChallengeProvider({ children }: ChallengeProviderProps) {\r\n    const [level, setLevel] = useState(1);\r\n    const [currentExperience, setCurrentExperience] = useState(0);\r\n    const [challengesCompleted, setChallengesCompleted] = useState(0);\r\n\r\n    function levelUp() {\r\n        setLevel(level + 1);\r\n    }\r\n\r\n    function startNewChallenge() {\r\n\r\n    }\r\n\r\n    return (\r\n        <ChallengesContext.Provider \r\n            value={{\r\n                level, \r\n                currentExperience,\r\n                challengesCompleted,\r\n                levelUp,\r\n                startNewChallenge\r\n            }} \r\n        >\r\n            {children}\r\n        </ChallengesContext.Provider>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}